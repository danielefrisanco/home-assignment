import { Buffer } from 'node:buffer';
import * as consts from '../immu-hash/consts.js';
export function binEntryToValEntry(props) {
    return {
        type: 'val',
        version: '1',
        meta: props.meta,
        key: binEntryKeyToValEntryKey(props.prefixedKey),
        val: binEntryValToValEntryVal(props.prefixedVal),
    };
}
export function valEntryToBinEntry(props) {
    return {
        type: 'bin',
        version: '1',
        meta: props.meta,
        prefixedKey: Buffer.concat([
            consts.PrefixKeyVal,
            props.key,
        ]),
        prefixedVal: Buffer.concat([
            consts.PrefixValVal,
            props.val,
        ]),
    };
}
export function valEntryToLeafEntryPrefixedKey(props) {
    return Buffer.concat([consts.PrefixKeyVal, props.key]);
}
export function binEntryKeyToValEntryKey(keyBytes, offset) {
    let index = offset ?? 0;
    const keyPrefix = keyBytes[index];
    index += 1;
    const key = keyBytes.subarray(index);
    return key;
}
export function binEntryValToValEntryVal(valBytes, offset) {
    let index = offset ?? 0;
    const valPrefix = valBytes[index];
    index += 1;
    const val = valBytes.subarray(index);
    return val;
}
//# sourceMappingURL=ValEntry.js.map