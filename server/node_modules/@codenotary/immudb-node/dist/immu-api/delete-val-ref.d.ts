/// <reference types="node" />
import type * as igrpc from '@codenotary/immudb-node-grpcjs';
import * as grpcjs from '@grpc/grpc-js';
import Long from 'long';
export declare type DeleteValRefProps = {
    /**
     * Array of key value pairs to set.
     */
    keys: Buffer[];
    /**
     * Delete keys in transactions (database) after specified id.
     *
     * Simulate situation as if database consists of transactions:
     * - from transaction `seenAtTxId`
     * - to most recent transaction.
     */
    seenSinceTxId?: Long;
    /**
     * Operation options.
     */
    options?: {
        /**
         * Do not wait for immudb to update database indexes, setting this
         * value to `true` may cause operation to speed up in exchange for
         * stale database latest keys values.
         *
         * For example geting key value will return key value pointed by
         * indexer. If indexer is not up to date, returned value may be not
         * latest value.
         *
         * Default value is `false`.
         */
        dontWaitForIndexer?: boolean;
    };
};
export declare function createDeleteValRef(client: igrpc.ImmuServiceClient): (props: DeleteValRefProps & {
    credentials: grpcjs.CallCredentials;
}) => Promise<import("../types/Tx.js").TxCore>;
//# sourceMappingURL=delete-val-ref.d.ts.map