import type * as igrpc from '@codenotary/immudb-node-grpcjs';
import type * as immu from '../types/index.js';
import * as grpcjs from '@grpc/grpc-js';
export declare function createOpenSession(client: igrpc.ImmuServiceClient): (sessionInfo: immu.UserDatabaseSession) => Promise<immu.SessionTokens>;
export declare function createCloseSession(client: igrpc.ImmuServiceClient): (props: grpcjs.CallCredentials) => Promise<void>;
export declare function createKeepAlive(client: igrpc.ImmuServiceClient): (props: {
    credentials: grpcjs.CallCredentials;
}) => Promise<void>;
export declare type UseDbProps = {
    /**
     * Name of immudb instance database
     */
    database: string;
};
export declare function createUseDb(client: igrpc.ImmuServiceClient): (props: UseDbProps & {
    credentials: grpcjs.CallCredentials;
}) => Promise<{
    database: string;
    token: string;
}>;
//# sourceMappingURL=session.d.ts.map