import type * as igrpc from '@codenotary/immudb-node-grpcjs';
import type * as immu from '../types/index.js';
import * as grpcjs from '@grpc/grpc-js';
import Long from 'long';
export declare function createServerInfo(client: igrpc.ImmuServiceClient): (props: {
    credentials: grpcjs.CallCredentials;
}) => Promise<immu.ServerInfo>;
export declare type ExportTxProps = {
    txId: Long;
};
export declare function createExportTx(client: igrpc.ImmuServiceClient): (props: ExportTxProps & {
    credentials: grpcjs.CallCredentials;
}) => AsyncGenerator<igrpc.Chunk__Output, any[], unknown>;
export declare type ReplicateTxProps = {
    chunks: AsyncIterable<igrpc.Chunk>;
};
export declare function createReplicateTx(client: igrpc.ImmuServiceClient): (props: ReplicateTxProps & {
    credentials: grpcjs.CallCredentials;
}) => Promise<immu.TxCore>;
//# sourceMappingURL=instance.d.ts.map