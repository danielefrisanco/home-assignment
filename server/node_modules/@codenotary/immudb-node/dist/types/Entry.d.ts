/// <reference types="node" />
import Long from "long";
import { EntryMetadata } from "./EntryMeta.js";
export declare type KVMH = {
    prefixedKey: Buffer;
    prefixedVal: Buffer;
    meta?: EntryMetadata;
    valHash: Buffer;
};
export declare type BinEntry = {
    type: 'bin';
    version: '1';
    prefixedKey: Buffer;
    prefixedVal: Buffer;
    meta?: EntryMetadata;
};
export declare type HashEntry = {
    type: 'hash';
    version: '1';
    prefixedKey: Buffer;
    meta?: EntryMetadata;
    prefixedValHash: Buffer;
};
export declare type ValEntry = {
    type: 'val';
    version: '1';
    meta?: EntryMetadata;
    key: Buffer;
    val: Buffer;
};
export declare type RefEntry = {
    type: 'ref';
    version: '1';
    meta?: EntryMetadata;
    key: Buffer;
    referredKey: Buffer;
    referredAtTxId: Long;
};
export declare type ZSetEntry = {
    type: 'zSet';
    version: '1';
    meta?: EntryMetadata;
    zSet: Buffer;
    referredKey: Buffer;
    referredAtTxId: Long;
    referredKeyScore: number;
};
export declare type SqlRowEntry = {
    type: 'sql';
    version: '1';
    meta?: EntryMetadata;
    sqlType: 'row';
    dbId: number;
    tableId: number;
    pk: Buffer;
    columnsValues: SqlRowColumn[];
};
export declare type SqlRowColumn = {
    id: number;
    bin: Buffer;
};
export declare type SqlColumnEntry = {
    type: 'sql';
    version: '1';
    meta?: EntryMetadata;
    sqlType: 'column';
    dbId: number;
    tableId: number;
    columnId: number;
    columnType: string;
    columnIsNotNull: boolean;
    columnIsAutoIncr: boolean;
    columnName: string;
    columnMaxLength: number;
};
export declare type SqlIndexEntry = {
    type: 'sql';
    version: '1';
    meta?: EntryMetadata;
    sqlType: 'index';
    dbId: number;
    tableId: number;
    indexId: number;
    indexIsPrimary: number;
    columns: SqlIndexColumn[];
};
export declare type SqlIndexColumn = {
    id: number;
    ascDesc: number;
};
export declare type SqlTableEntry = {
    type: 'sql';
    version: '1';
    meta?: EntryMetadata;
    sqlType: 'table';
    dbId: number;
    tableId: number;
    tableName: string;
};
export declare type SqlDbEntry = {
    type: 'sql';
    version: '1';
    meta?: EntryMetadata;
    sqlType: 'db';
    dbId: number;
    dbName: string;
};
/**
 * immudb sql entry, one of:
 * - row entry - {@link SqlRowEntry},
 * - column entry - {@link SqlColumnEntry},
 * - index entry - {@link SqlIndexEntry},
 * - table entry - {@link SqlTableEntry},
 * - database entry - {@link SqlDbEntry}.
 */
export declare type SqlEntry = SqlRowEntry | SqlColumnEntry | SqlIndexEntry | SqlTableEntry | SqlDbEntry;
/**
 * immudb entry, one of:
 * - binary entry - {@link BinEntry},
 * - hash entry - {@link HashEntry},
 * - value entry - {@link ValEntry},
 * - reference entry - {@link RefEntry},
 * - z-Set entry - {@link ZSetEntry},
 * - sql entry - {@link SqlEntry},
 */
export declare type Entry = BinEntry | HashEntry | ValEntry | RefEntry | ZSetEntry | SqlEntry;
//# sourceMappingURL=Entry.d.ts.map