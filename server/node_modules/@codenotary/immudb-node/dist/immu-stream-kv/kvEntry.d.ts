/// <reference types="node" />
import { Buffer } from 'node:buffer';
export declare function fromKVEntry(props: {
    key: Buffer;
    val: Buffer;
}): Buffer;
export declare function fromKVEntries(kvs: {
    key: Buffer;
    val: Buffer;
}[]): AsyncGenerator<{
    content: Buffer;
}, void, unknown>;
/**
 * Deserializes key-value from list of buffers heaving
 * following structure:
 * - key length - UInt64BE
 * - key
 * - value length - UInt64BE
 * - value
 */
export declare function toKVEntry(everything: Buffer): {
    key: Buffer;
    val: Buffer;
};
/**
 * Deserializes key-values from list of buffers heaving
 * following structure:
 * - serie of:
 *   - key length - UInt64BE
 *   - key
 *   - value length - UInt64BE
 *   - value
 */
export declare function toKVEntries(everything: Buffer): {
    key: Buffer;
    val: Buffer;
}[];
/**
 * Deserializes key-value from list of buffers heaving
 * following structure:
 * - key length - UInt64BE
 * - key
 * - value length - UInt64BE
 * - value
 */
export declare function toKVEntryOpt(bufs: Iterator<Buffer, Buffer>): {
    key: Buffer;
    val: Buffer;
};
//# sourceMappingURL=kvEntry.d.ts.map