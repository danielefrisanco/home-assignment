import * as grpcjs from '@grpc/grpc-js';
/**
 * Creates {@link grpcjs.Metadata} object with provided {@link ImmuGrpcMetadata}
 * options specific to immudb.
 */
export function createImmuGrpcMetadata(props) {
    const meta = new grpcjs.Metadata();
    if (props.sessionid)
        meta.add('sessionid', props.sessionid);
    if (props['immudb-uuid'])
        meta.add('immudb-uuid', props['immudb-uuid']);
    if (props.authorization)
        meta.add('authorization', props.authorization);
    if (props.transactionid)
        meta.add('transactionid', props.transactionid);
    return meta;
}
/**
 * Creates {@link grpcjs.CallCredentials} object with provided {@link ImmuGrpcMetadata}
 * options specific to immudb.
 */
export function createImmuGrpcCallCredentials(props) {
    return grpcjs.credentials.createFromMetadataGenerator((_params, callback) => {
        callback(null, createImmuGrpcMetadata(props));
    });
}
//# sourceMappingURL=immu-session.js.map