import * as hash from './hash.js';
import * as buffer from '../buffer.js';
export function hashOfTxCore(tx) {
    return hash.ofBuffers(Buffer.from(tx.id.toBytesBE()), // id
    tx.prevTxHash, // previous tx hash
    hash.ofBuffers(Buffer.from(tx.timestamp.toBytesBE()), // timestamp
    buffer.fromUInt16BE(1), // header version
    buffer.fromUInt16BE(0), // empty tx metadata
    buffer.fromUInt32BE(tx.allEntriesCount), // tx entries count
    tx.allEntriesMht, // tx entries mht hash
    Buffer.from(tx.id.sub(1).toBytesBE()), // previous tx id
    tx.prevTxesMht));
}
export function hashOfTxHash(tx) {
    return tx.txHash;
}
//# sourceMappingURL=tx.js.map