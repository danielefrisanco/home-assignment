import * as igrpc from '@codenotary/immudb-node-grpcjs';
export declare function createStreamGet(client: igrpc.ImmuServiceClient): (props: {
    request: igrpc.KeyRequest;
    credentials?: import("@grpc/grpc-js").CallCredentials | undefined;
    requestMetadata?: import("@grpc/grpc-js").Metadata | undefined;
    operationTimeoutMS?: number | undefined;
    cancelSignal?: AbortSignal | undefined;
}) => AsyncGenerator<igrpc.Chunk__Output, any[], unknown>;
export declare function createStreamScan(client: igrpc.ImmuServiceClient): (props: {
    request: igrpc.ScanRequest;
    credentials?: import("@grpc/grpc-js").CallCredentials | undefined;
    requestMetadata?: import("@grpc/grpc-js").Metadata | undefined;
    operationTimeoutMS?: number | undefined;
    cancelSignal?: AbortSignal | undefined;
}) => AsyncGenerator<igrpc.Chunk__Output, any[], unknown>;
export declare function createStreamZScan(client: igrpc.ImmuServiceClient): (props: {
    request: igrpc.ZScanRequest;
    credentials?: import("@grpc/grpc-js").CallCredentials | undefined;
    requestMetadata?: import("@grpc/grpc-js").Metadata | undefined;
    operationTimeoutMS?: number | undefined;
    cancelSignal?: AbortSignal | undefined;
}) => AsyncGenerator<igrpc.Chunk__Output, any[], unknown>;
export declare function createStreamHistory(client: igrpc.ImmuServiceClient): (props: {
    request: igrpc.HistoryRequest;
    credentials?: import("@grpc/grpc-js").CallCredentials | undefined;
    requestMetadata?: import("@grpc/grpc-js").Metadata | undefined;
    operationTimeoutMS?: number | undefined;
    cancelSignal?: AbortSignal | undefined;
}) => AsyncGenerator<igrpc.Chunk__Output, any[], unknown>;
export declare function createStreamVerifiableGet(client: igrpc.ImmuServiceClient): (props: {
    request: igrpc.VerifiableGetRequest;
    credentials?: import("@grpc/grpc-js").CallCredentials | undefined;
    requestMetadata?: import("@grpc/grpc-js").Metadata | undefined;
    operationTimeoutMS?: number | undefined;
    cancelSignal?: AbortSignal | undefined;
}) => AsyncGenerator<igrpc.Chunk__Output, any[], unknown>;
export declare function createExportTx(client: igrpc.ImmuServiceClient): (props: {
    request: igrpc.ExportTxRequest;
    credentials?: import("@grpc/grpc-js").CallCredentials | undefined;
    requestMetadata?: import("@grpc/grpc-js").Metadata | undefined;
    operationTimeoutMS?: number | undefined;
    cancelSignal?: AbortSignal | undefined;
}) => AsyncGenerator<igrpc.Chunk__Output, any[], unknown>;
//# sourceMappingURL=reader-call.d.ts.map