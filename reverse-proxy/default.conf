server 
{ 
  # this server listens on port 80
  listen 80 ;
  listen [::]:80;
  # https://developer.okta.com/blog/2018/08/28/nginx-auth-request
  # name this server "nodeserver", but we can call it whatever we like
  server_name nodeserver;

  # the location / means that when we visit the root url (localhost:80/), we use this configuration
  location / {
          # a bunch of boilerplate proxy configuration
          # proxy_http_version 1.1;
          # proxy_cache_bypass $http_upgrade;

          # proxy_set_header Upgrade $http_upgrade;
          # proxy_set_header Connection 'upgrade';
          # proxy_set_header Host $host;
          # proxy_set_header X-Real-IP $remote_addr;
          # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          # proxy_set_header X-Forwarded-Proto $scheme;
      if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          #
          # Custom headers and headers various browsers *should* be OK with but aren't
          #
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          #
          # Tell client that this pre-flight info is valid for 20 days
          #
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain; charset=utf-8';
          add_header 'Content-Length' 0;
          return 204;
      }
      if ($request_method = 'POST') {
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
      }
      if ($request_method = 'GET') {
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
      }
          # the real magic is here where we forward requests to the address that the Node.js server is running on
          proxy_pass http://localhost:8080;
  }



  # listen 443 ssl;
  # server_name okta.com;

  # # ssl_certificate ../ssl/lets-encrypt/hollywood.com.crt;
  # # ssl_certificate_key ../ssl/lets-encrypt/hollywood.com.key;

  # add_header 'Access-Control-Allow-Origin' '*';
  # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
  # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

  }


